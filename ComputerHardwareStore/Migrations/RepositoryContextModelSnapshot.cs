// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace ComputerHardwareStore.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Benchmark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Resolution")
                        .HasColumnType("int");

                    b.Property<int>("Settings")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Benchmarks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d519389-f0de-4eef-b3d1-1938df9700f4"),
                            GameName = "Cyberpunk 2077",
                            Resolution = 0,
                            Settings = 0
                        },
                        new
                        {
                            Id = new Guid("88d38fd2-8b75-4bf2-ba67-d43a7329c7b5"),
                            GameName = "Cyberpunk 2077",
                            Resolution = 1,
                            Settings = 0
                        },
                        new
                        {
                            Id = new Guid("27817726-bd13-4784-a3f3-0ab9b10d6190"),
                            GameName = "Cyberpunk 2077",
                            Resolution = 2,
                            Settings = 0
                        },
                        new
                        {
                            Id = new Guid("72cedae8-f648-4a4e-826b-47a85aec960e"),
                            GameName = "Horizon: Zero Dawn",
                            Resolution = 0,
                            Settings = 0
                        },
                        new
                        {
                            Id = new Guid("ffdaf3aa-0c42-499c-b63b-1cca50a36b97"),
                            GameName = "Horizon: Zero Dawn",
                            Resolution = 1,
                            Settings = 0
                        },
                        new
                        {
                            Id = new Guid("4092a98e-efef-480d-9cb0-d72238b62a51"),
                            GameName = "Horizon: Zero Dawn",
                            Resolution = 1,
                            Settings = 0
                        },
                        new
                        {
                            Id = new Guid("0be78fd9-f27c-4e59-a6d6-c26ee4fa93e4"),
                            GameName = "Marvel Rivals",
                            Resolution = 2,
                            Settings = 0
                        });
                });

            modelBuilder.Entity("Entities.Models.GraphicsCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BaseClockSpeed")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<byte>("ConnectorPins")
                        .HasColumnType("tinyint");

                    b.Property<string>("Distributor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsSupportRtx")
                        .HasColumnType("bit");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaxClockSpeed")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("MemoryClockSpeed")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GraphicsCards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b5d628f0-d4e2-4d63-920d-9aeaae84c418"),
                            BaseClockSpeed = "1470",
                            ConnectorPins = (byte)8,
                            Distributor = "MSI",
                            IsSupportRtx = true,
                            Manufacturer = "NVIDIA",
                            MaxClockSpeed = "1650",
                            MemoryClockSpeed = "14000",
                            Model = "RTX 2060 Super",
                            Price = 262.17m,
                            StockQuantity = 17
                        },
                        new
                        {
                            Id = new Guid("5280896c-12eb-49fc-a011-1bee7b7032f0"),
                            BaseClockSpeed = "1210",
                            ConnectorPins = (byte)14,
                            Distributor = "Sapphire",
                            IsSupportRtx = false,
                            Manufacturer = "AMD",
                            MaxClockSpeed = "1411",
                            MemoryClockSpeed = "8000",
                            Model = "RX 580",
                            Price = 80.39m,
                            StockQuantity = 3
                        },
                        new
                        {
                            Id = new Guid("50ea126c-b789-4a14-bb74-153ef1cb018b"),
                            BaseClockSpeed = "2295",
                            ConnectorPins = (byte)16,
                            Distributor = "MSI",
                            IsSupportRtx = true,
                            Manufacturer = "NVIDIA",
                            MaxClockSpeed = "2595",
                            MemoryClockSpeed = "23000",
                            Model = "RTX 4080 Super",
                            Price = 1139.99m,
                            StockQuantity = 21
                        });
                });

            modelBuilder.Entity("Entities.Models.GraphicsCardBenchmark", b =>
                {
                    b.Property<Guid>("GraphicsCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BenchmarkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Fps")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)");

                    b.Property<string>("TestingTool")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GraphicsCardId", "BenchmarkId");

                    b.HasIndex("BenchmarkId");

                    b.ToTable("GraphicsCardBenchmarks");

                    b.HasData(
                        new
                        {
                            GraphicsCardId = new Guid("b5d628f0-d4e2-4d63-920d-9aeaae84c418"),
                            BenchmarkId = new Guid("1d519389-f0de-4eef-b3d1-1938df9700f4"),
                            Fps = 96.7m,
                            TestingTool = "Fraps"
                        },
                        new
                        {
                            GraphicsCardId = new Guid("b5d628f0-d4e2-4d63-920d-9aeaae84c418"),
                            BenchmarkId = new Guid("88d38fd2-8b75-4bf2-ba67-d43a7329c7b5"),
                            Fps = 112.3m,
                            TestingTool = "MSI Afterburner"
                        },
                        new
                        {
                            GraphicsCardId = new Guid("b5d628f0-d4e2-4d63-920d-9aeaae84c418"),
                            BenchmarkId = new Guid("27817726-bd13-4784-a3f3-0ab9b10d6190"),
                            Fps = 164.2m,
                            TestingTool = "RivaTuner Statistics Server"
                        },
                        new
                        {
                            GraphicsCardId = new Guid("b5d628f0-d4e2-4d63-920d-9aeaae84c418"),
                            BenchmarkId = new Guid("72cedae8-f648-4a4e-826b-47a85aec960e"),
                            Fps = 24.3m,
                            TestingTool = "Shadowplay"
                        },
                        new
                        {
                            GraphicsCardId = new Guid("b5d628f0-d4e2-4d63-920d-9aeaae84c418"),
                            BenchmarkId = new Guid("ffdaf3aa-0c42-499c-b63b-1cca50a36b97"),
                            Fps = 48.5m,
                            TestingTool = "MSI Afterburner"
                        },
                        new
                        {
                            GraphicsCardId = new Guid("b5d628f0-d4e2-4d63-920d-9aeaae84c418"),
                            BenchmarkId = new Guid("4092a98e-efef-480d-9cb0-d72238b62a51"),
                            Fps = 76.1m,
                            TestingTool = "RivaTuner Statistics Server"
                        },
                        new
                        {
                            GraphicsCardId = new Guid("b5d628f0-d4e2-4d63-920d-9aeaae84c418"),
                            BenchmarkId = new Guid("0be78fd9-f27c-4e59-a6d6-c26ee4fa93e4"),
                            Fps = 63.4m,
                            TestingTool = "RivaTuner Statistics Server"
                        });
                });

            modelBuilder.Entity("Entities.Models.GraphicsCardBenchmark", b =>
                {
                    b.HasOne("Entities.Models.Benchmark", "Benchmark")
                        .WithMany("GraphicsCardBenchmarks")
                        .HasForeignKey("BenchmarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.GraphicsCard", "GraphicsCard")
                        .WithMany("GraphicsCardBenchmarks")
                        .HasForeignKey("GraphicsCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benchmark");

                    b.Navigation("GraphicsCard");
                });

            modelBuilder.Entity("Entities.Models.Benchmark", b =>
                {
                    b.Navigation("GraphicsCardBenchmarks");
                });

            modelBuilder.Entity("Entities.Models.GraphicsCard", b =>
                {
                    b.Navigation("GraphicsCardBenchmarks");
                });
#pragma warning restore 612, 618
        }
    }
}
